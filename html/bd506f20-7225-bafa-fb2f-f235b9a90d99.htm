<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Sequence.Except(TSource) Method (ISequence(TSource), IEnumerable(TSource), IEqualityComparer(TSource))</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Sequences.Sequence.Except``1(Sequences.ISequence{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" /><meta name="Description" content="Produces the set difference of two sequences by using the specified to compare values. If the second sequence represents an infinite set or series, this will never return!" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="Sequences" /><meta name="file" content="bd506f20-7225-bafa-fb2f-f235b9a90d99" /><meta name="guid" content="bd506f20-7225-bafa-fb2f-f235b9a90d99" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()"><div class="VS2013_outerDiv"><div class="VS2013_outerContent"><table class="TitleTable"><tr><td class="VS2013_tdLogoColumn"><img src="../icons/Help.png" /></td><td class="VS2013_tdTitleColumn">Sequence<span id="ID0ERBABABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ERBABABAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Except<span id="ID0EPBABABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EPBABABAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">TSource</span><span id="ID0ENBABABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ENBABABAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Method (ISequence<span id="ID0ELBABABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ELBABABAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">TSource</span><span id="ID0EJBABABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EJBABABAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>, IEnumerable<span id="ID0EHBABABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EHBABABAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">TSource</span><span id="ID0EFBABABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EFBABABAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>, IEqualityComparer<span id="ID0EDBABABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDBABABAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">TSource</span><span id="ID0EBBABABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABABAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>)</td><td class="VS2013_tdRunningTitleColumn">A Sandcastle Documented Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="summary">
            Produces the set difference of two sequences by using the specified <a href="http://msdn2.microsoft.com/en-us/library/ms132151" target="_blank">IEqualityComparer<span id="ID0ECBKAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECBKAAABAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T<span id="ID0EABKAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABKAAABAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></a> to compare values.
            If the second sequence represents an infinite set or series, this will never return!
            </div><p></p><strong>Namespace:</strong> <a href="11006482-8791-6205-9f63-bdbb13db6834.htm">Sequences</a><br /><strong>Assembly:</strong> Sequences (in Sequences.dll) Version: 1.0.0.0 (1.0.0.0)<div class="VS2013_CollapsibleAreaRegion"><span class="VS2013_RegionTitle" onclick="ExpandCollapse('ID1RB')" onkeypress="ExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="CollapseToggle" src="../icons/Expanded.png" />Syntax</span></div><div id="ID1RBSection" class="VS2013_CollapsibleSection"><div id="snippetGroup_Syntax" class="code"><div id="ID0EDYACAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EDYACAAABAA_tabs"><div id="ID0EDYACAAABAA_tab1" class="codeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDYACAAABAA','C#','1','4');return false;">C#</a></div><div id="ID0EDYACAAABAA_tab2" class="codeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDYACAAABAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0EDYACAAABAA_tab3" class="codeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDYACAAABAA','Visual C++','3','4');return false;">C++</a></div><div id="ID0EDYACAAABAA_tab4" class="codeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDYACAAABAA','F#','4','4');return false;">F#</a></div></div><div id="ID0EDYACAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDYACAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDYACAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDYACAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDYACAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EDYACAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">ISequence</span>&lt;TSource&gt; <span class="identifier">Except</span>&lt;TSource&gt;(
	<span class="keyword">this</span> <span class="identifier">ISequence</span>&lt;TSource&gt; <span class="parameter">first</span>,
	<span class="identifier">IEnumerable</span>&lt;TSource&gt; <span class="parameter">second</span>,
	<span class="identifier">IEqualityComparer</span>&lt;TSource&gt; <span class="parameter">comparer</span>
)
</pre></div><div id="ID0EDYACAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>public static ISequence&lt;TSource&gt; Except&lt;TSource&gt;(
	this ISequence&lt;TSource&gt; first,
	IEnumerable&lt;TSource&gt; second,
	IEqualityComparer&lt;TSource&gt; comparer
)
</pre></div><div id="ID0EDYACAAABAA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre>&lt;<span class="identifier">ExtensionAttribute</span>&gt; 
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">Except</span>(<span class="keyword">Of</span> TSource) ( 
	<span class="parameter">first</span> <span class="keyword">As</span> <span class="identifier">ISequence</span>(<span class="keyword">Of</span> TSource),
	<span class="parameter">second</span> <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> TSource),
	<span class="parameter">comparer</span> <span class="keyword">As</span> <span class="identifier">IEqualityComparer</span>(<span class="keyword">Of</span> TSource)
) <span class="keyword">As</span> <span class="identifier">ISequence</span>(<span class="keyword">Of</span> TSource)</pre></div><div id="ID0EDYACAAABAA_code_Plain_Div2" class="codeSnippetContainerCode" style="display: none"><pre>&lt;ExtensionAttribute&gt; 
Public Shared Function Except(Of TSource) ( 
	first As ISequence(Of TSource),
	second As IEnumerable(Of TSource),
	comparer As IEqualityComparer(Of TSource)
) As ISequence(Of TSource)</pre></div><div id="ID0EDYACAAABAA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre><span class="keyword">public</span>:
[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> TSource&gt;
<span class="keyword">static</span> <span class="identifier">ISequence</span>&lt;TSource&gt;^ <span class="identifier">Except</span>(
	<span class="identifier">ISequence</span>&lt;TSource&gt;^ <span class="parameter">first</span>, 
	<span class="identifier">IEnumerable</span>&lt;TSource&gt;^ <span class="parameter">second</span>, 
	<span class="identifier">IEqualityComparer</span>&lt;TSource&gt;^ <span class="parameter">comparer</span>
)</pre></div><div id="ID0EDYACAAABAA_code_Plain_Div3" class="codeSnippetContainerCode" style="display: none"><pre>public:
[ExtensionAttribute]
generic&lt;typename TSource&gt;
static ISequence&lt;TSource&gt;^ Except(
	ISequence&lt;TSource&gt;^ first, 
	IEnumerable&lt;TSource&gt;^ second, 
	IEqualityComparer&lt;TSource&gt;^ comparer
)</pre></div><div id="ID0EDYACAAABAA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">Except</span> : 
        <span class="parameter">first</span> : <span class="identifier">ISequence</span>&lt;'TSource&gt; * 
        <span class="parameter">second</span> : <span class="identifier">IEnumerable</span>&lt;'TSource&gt; * 
        <span class="parameter">comparer</span> : <span class="identifier">IEqualityComparer</span>&lt;'TSource&gt; <span class="keyword">-&gt;</span> <span class="identifier">ISequence</span>&lt;'TSource&gt; 
</pre></div><div id="ID0EDYACAAABAA_code_Plain_Div4" class="codeSnippetContainerCode" style="display: none"><pre>static member Except : 
        first : ISequence&lt;'TSource&gt; * 
        second : IEnumerable&lt;'TSource&gt; * 
        comparer : IEqualityComparer&lt;'TSource&gt; -&gt; ISequence&lt;'TSource&gt; 
</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDYACAAABAA');</script></div><h4 class="subHeading">Parameters</h4><dl paramName="first"><dt><span class="parameter">first</span></dt><dd>Type: <a href="3b6a3c7e-a6e5-eec8-e046-c3f2320ef836.htm">Sequences<span id="ID0EBFAWACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBFAWACAAABAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>ISequence</a><span id="ID0EEAWACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEAWACAAABAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="selflink"><span class="typeparameter">TSource</span></span><span id="ID0ECAWACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECAWACAAABAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><br /><span>A sequence whose elements that are not also in <span class="parameter">second</span> will be returned.</span></dd></dl><dl paramName="second"><dt><span class="parameter">second</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">System.Collections.Generic<span id="ID0EBFAVACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBFAVACAAABAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>IEnumerable</a><span id="ID0EEAVACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEAVACAAABAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="selflink"><span class="typeparameter">TSource</span></span><span id="ID0ECAVACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECAVACAAABAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><br /><span>A sequence whose elements that also occur in this sequence will cause those elements to be removed from the returned sequence.</span></dd></dl><dl paramName="comparer"><dt><span class="parameter">comparer</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/ms132151" target="_blank">System.Collections.Generic<span id="ID0EBFAUACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBFAUACAAABAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>IEqualityComparer</a><span id="ID0EEAUACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEAUACAAABAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="selflink"><span class="typeparameter">TSource</span></span><span id="ID0ECAUACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECAUACAAABAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><br /><span>An <a href="http://msdn2.microsoft.com/en-us/library/ms132151" target="_blank">IEqualityComparer<span id="ID0ECBAAUACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECBAAUACAAABAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T<span id="ID0EABAAUACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABAAUACAAABAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></a> to compare values.</span></dd></dl><div class="VS2013_CollapsibleAreaRegion"><span class="VS2013_RegionTitle" onclick="ExpandCollapse('ID0RB')" onkeypress="ExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="CollapseToggle" src="../icons/Expanded.png" />Type Parameters</span></div><div id="ID0RBSection" class="VS2013_CollapsibleSection"><dl><dt><span class="parameter">TSource</span></dt><dd>The type of the elements of the input sequences.</dd></dl></div><h4 class="subHeading">Return Value</h4>Type: <a href="3b6a3c7e-a6e5-eec8-e046-c3f2320ef836.htm">ISequence</a><span id="ID0EPACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EPACAAABAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="selflink"><span class="typeparameter">TSource</span></span><span id="ID0ENACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ENACAAABAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><br />A sequence that contains the set difference of the elements of two sequences.<h4 class="subHeading">Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type <a href="3b6a3c7e-a6e5-eec8-e046-c3f2320ef836.htm">ISequence</a><span id="ID0EHACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EHACAAABAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="selflink"><span class="typeparameter">TSource</span></span><span id="ID0EFACAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EFACAAABAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>. When you use instance method syntax to call this method, omit the first parameter. For more information, see <a href="http://msdn.microsoft.com/en-us/library/bb384936.aspx" target="_blank">Extension Methods (Visual Basic)</a> or <a href="http://msdn.microsoft.com/en-us/library/bb383977.aspx" target="_blank">Extension Methods (C# Programming Guide)</a>.</div><a name="seeAlsoSection"></a><div class="VS2013_CollapsibleAreaRegion"><span class="VS2013_RegionTitle" onclick="ExpandCollapse('ID2RB')" onkeypress="ExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="CollapseToggle" src="../icons/Expanded.png" />See Also</span></div><div id="ID2RBSection" class="VS2013_CollapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="724d51e6-91d7-5334-ae31-0e918f93f065.htm">Sequence Class</a></div><div class="seeAlsoStyle"><a href="8945a3be-12aa-8e31-1f8c-5297987954c3.htm">Except Overload</a></div><div class="seeAlsoStyle"><a href="11006482-8791-6205-9f63-bdbb13db6834.htm">Sequences Namespace</a></div></div></div></div></div></div><div id="VS2013_footer" class="VS2013_footer"></div></body></html>